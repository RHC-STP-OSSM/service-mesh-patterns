apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oauth-proxy.fullname" . }}
  labels:
    {{- include "oauth-proxy.labels" . | nindent 4 }}
    app: oauth-proxy
    version: v1
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "oauth-proxy.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oauth-proxy.selectorLabels" . | nindent 8 }}
        app: oauth-proxy
        version: v1
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oauth-proxy.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --provider=oidc
            - --redirect-url={{ .Values.redirect_url }}
            - --oidc-issuer-url={{ .Values.oidc_issuer_url }}
            - --upstream=http://127.0.0.1:8080
            - '--email-domain=*'
            - --client-id={{ .Values.client_id }}
            - --client-secret={{ .Values.client_secret }}
            - --pass-access-token=true
            - --pass-authorization-header=true
            - --cookie-secret={{ .Values.cookie_secret }}
            - --skip-provider-button=true
            - --http-address=0.0.0.0:8081
            - --cookie-expire=0h45m0s #Note: this should be smaller than the jwt expiration configured by your oidc issuer
            - --skip-jwt-bearer-tokens=true
            - --extra-jwt-issuers={{ .Values.extra_jwt_issuers }} # audience returned by okta for client_credentials
          ports:
            - name: oauth-http
              containerPort: 8081
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ping
              port: oauth-http
          readinessProbe:
            httpGet:
              path: /ping
              port: oauth-http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: nginx-echo-headers
          image: brndnmtthws/nginx-echo-headers
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
